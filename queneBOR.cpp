#include <iostream> 
using namespace std; 
class queue //Класс очереди 
{ 
private: 
struct queue_ob// Структура для хранения элементов очереди 
{ 
int value;//Поле для хранения значения элемента очереди 
queue_ob *addr; // Поле для хранения слеющего элемента 
}; 

queue_ob *head; // указатель, хранящий адресс головы очереди 
queue_ob *tail; // Указатель хранящий адрес хвоста 

public: 
queue(int x)// Конструктор класса 
//В параметр передается голова очереди 
{ 
head=new(queue_ob); //Выделяем память под элемент 
tail=head; // При создании очереди хвост и голова являются одним и тем же элементом 
head->value=x; // Записываем значение 
head->addr=0; // Адрес ноль, так как следующего элемента пока нет
} 


void add(int value)// Добавляетэлемент в очередь 
{ 
queue_ob *temp=new(queue_ob); // Выделяем память под новый хвост очереди 
temp->addr=0; // Записываем в поле адреса нового хвоста ноль, так как за ничего нету 
temp->value=value; //Заполняем поле значения нового хвоста 
tail->addr=temp; // Записываем в поле адреса старого хвоста адрес нового хвоста 
tail=temp; //Записываем в указель хвоста адрес действительного хвоста 
} 

void del(int *ret)//Удаляет элемент(выталкивает) и возвращает его 
// По адресу, хранящемся в ret, передается значение удаляемой головы 
{ 
queue_ob *temp=head; // записываем адрес головы 
*ret=head->value; // записываем значени головы 
head=head->addr; // изменяем адрес головы 
delete temp; // удаляем старую голову 
} 
void get(int *ret) 
{ 
*ret=head->value; 
} 
};